@use "../helpers/vars" as *;
@use "../helpers/mixins" as *;
@use "../bootstrap/vendor/rfs" as *;

header {
  background-color: #fff;
  position: fixed;
  min-width: 100%;
  left: 0;
  z-index: 999;
  transition: all 0.4s ease-in-out;
  .logo-button-container {
    background-color: #fff;
    position: relative;
  }
  &.nav-up {
    top: -200px;
  }

  .logo {
    position: relative;

    img {
      max-width: 180px;
      width: 100%;

      @include media ($lg) {
        max-width: 110px;
      }
    }
  }

  .login-btn {
    position: relative;
    z-index: 999999;

    a {
      @include font-size(22px);
      color: $text;
      font-weight: lighter;
    }
  }
  .lang-btn {
    display: none;
    @include media($lg) {
      display: none;
    }
  }

  .menu {
    cursor: pointer;
    position: relative;
    z-index: 999999;
    .icon {
      position: relative;
      width: 50px;
      height: 50px;
      cursor: pointer;

      div {
        margin: auto;
        position: absolute;
        top: 0;
        right: 0;
        left: 0;
        bottom: 0;
        width: 22px;
        height: 12px;
      }
      span {
        position: absolute;
        display: block;
        width: 100%;
        height: 2px;
        background-color: $primary;
        border-radius: 1px;
        transition: all 0.5s cubic-bezier(0.1, 0.82, 0.76, 0.965);
        &:first-of-type {
          top: 0;
        }
        &:last-of-type {
          bottom: 0;
        }
      }
      &.active {
        span {
          background-color: $gray;
          &:first-of-type {
            transform: rotate(45deg);
            top: 5px;
          }
          &:last-of-type {
            transform: rotate(-45deg);
            bottom: 5px;
          }
        }
      }
      &.active:hover span:first-of-type,
      &.active:hover span:last-of-type {
        width: 22px;
      }
    }
  }

  .menu-links {
    position: fixed;
    width: 100%;
    max-height: 100vh;
    overflow: scroll;
    top: -100%;
    left: 0%;
    z-index: -1;
    background-color: #fff;
    display: flex;
    align-items: center;
    justify-content: flex-start;
    text-align: #{$start_dir};
    transition: all .8s ease-in-out;
    &.active {
      z-index: 99;
      top: 0%;
    }
    .container {
      height: 100%;
      @include media ($lg) {
        .row {
          gap: 30px;
          .links {
            row-gap: 20px;
          }
        }
      }
    }
    li {
      position: relative;
      a {
        @include font-size(72px);
        @include media($lg) {
          @include font-size(32px);
        }
        &.active {
          color: $secondary;
        }
      }
    }
    .links {
      li:last-child {
        display: none;
        @include media($lg) {
          display: block;
        }
      }
    }
    ul,
    li {
      list-style: none;
    }

    ul {
      display: flex;
      flex-direction: column;
    }
    .contact-col {
      @include media($lg) {
        padding-bottom: 20px;
        .lang {
          padding-top: 25px;
          a {
            @include font-size(22px);
          }
        }
      }
      h5 {
        color: #d6d6d6;
        margin-bottom: -20px;
        @include media($lg) {
          margin-bottom: 0;
        }
      }

      h2 {
        position: relative;
        display: inline-block;
        color: $primary;
        cursor: pointer;
        line-height: 1.5;
        @include media($lg) {
          @include font-size(45px);
        }
        &::before {
          content: "";
          width: 100%;
          height: 2px;
          background-color: $primary;
          position: absolute;
          bottom: -10px;
          left: 0;
          transform: scaleX(.5);
          transform-origin: bottom left;
          transition: all .3s ease-in-out;
        }

        &:hover::before {
          transform: scaleX(1);
        }
      }
    }
  }

  li[class*="delay"]::before {
    transform: translateX(0%);
    transition: all 1s ease-in-out;
  }

  li.finish::before {
    transform: translateX(100%);
    transition: all 1s ease-in-out;
  }
}
$delay: 600;

@for $el from 1 through 20 {
  .delay-#{$el} {
    animation-delay: #{$delay}ms;
  }

  $delay: 100 + $delay;
}
